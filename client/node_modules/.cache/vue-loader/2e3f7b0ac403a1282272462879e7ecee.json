{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ralfzonneveld/Documents/Repositories/20:21/webdevüßë‚Äçüíª-20:21/Bloom/client/src/views/login/register/seventhStep.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ralfzonneveld/Documents/Repositories/20:21/webdevüßë‚Äçüíª-20:21/Bloom/client/src/views/login/register/seventhStep.vue","mtime":1623684808702},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ralfzonneveld/Documents/Repositories/20:21/webdevüßë‚Äçüíª-20:21/Bloom/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQC9jb21wb25lbnRzL3JlZ2lzdGVyL3JlZ2lzdGVyLnNjc3MiOwo="},{"version":3,"sources":["seventhStep.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA","file":"seventhStep.vue","sourceRoot":"src/views/login/register","sourcesContent":["<template>\n  <div>\n    <h2>Kies een profiel pictogram</h2>\n    <p>\n      Je kunt kiezen voor je\n      <span class=\"span\">memoji</span>\n      of initialen.\n    </p>\n\n    <div class=\"msg\">\n      <p>\n        Memoji is een vorm van het weergeven van een karakter, wat erg persoonlijk is, maar niet\n        privacygevoelig als bij een foto.\n      </p>\n    </div>\n\n    <ul class=\"seven\">\n      <li v-for=\"(item, index) in avatars\" :key=\"index\">\n        <input\n          type=\"radio\"\n          :id=\"item.color\"\n          name=\"profileAvatar\"\n          :value=\"item.color\"\n          @input=\"updateProfileAvatar\"\n        />\n        <label :for=\"item.color\" :class=\"item.color\">\n          <p>{{ item.initials }}</p>\n        </label>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  computed: {\n    ...mapState({\n      profileAvatar: (state) => state.user.profileAvatar,\n    }),\n  },\n  methods: {\n    updateProfileAvatar(e) {\n      this.$store.commit(\"updateStateProfileAvatar\", e.target.value);\n    },\n    createInitials(fullName) {\n      // Logic for getting the name initials - source: https://stackoverflow.com/a/33076482\n      let rgx = new RegExp(/(\\p{L}{1})\\p{L}+/, \"gu\");\n      let initials = [...fullName.matchAll(rgx)] || [];\n      initials = ((initials.shift()?.[1] || \"\") + (initials.pop()?.[1] || \"\")).toUpperCase();\n      return initials;\n    },\n  },\n  data() {\n    let firstName = this.$store.state.user.firstName;\n    let surName = this.$store.state.user.surName;\n    let fullName = `${firstName} ${surName}`;\n    let initials = this.createInitials(fullName);\n\n    return {\n      avatars: [\n        { initials: initials, color: \"yellow\" },\n        { initials: initials, color: \"orange\" },\n        { initials: initials, color: \"pink\" },\n        { initials: initials, color: \"green\" },\n        { initials: initials, color: \"blue\" },\n        { initials: initials, color: \"purple\" },\n        { initials: initials, color: \"gray\" },\n        { initials: initials, color: \"pinkTwo\" },\n        { initials: initials, color: \"yellowTwo\" },\n      ],\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/components/register/register.scss\";\n</style>\n"]}]}