{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ralfzonneveld/Documents/Repositories/20:21/webdevüßë‚Äçüíª-20:21/Bloom/client/src/views/chat/chatRequest.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ralfzonneveld/Documents/Repositories/20:21/webdevüßë‚Äçüíª-20:21/Bloom/client/src/views/chat/chatRequest.vue","mtime":1623684370520},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ralfzonneveld/Documents/Repositories/20:21/webdevüßë‚Äçüíª-20:21/Bloom/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkAvY29tcG9uZW50cy9jaGF0L2NoYXRSZXF1ZXN0LnNjc3MiOwo="},{"version":3,"sources":["chatRequest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA","file":"chatRequest.vue","sourceRoot":"src/views/chat","sourcesContent":["<template>\n  <section class=\"chat-request\">\n    <header>\n      <router-link to=\"/chats\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"7.246\"\n          height=\"11.941\"\n          viewBox=\"0 0 7.246 11.941\"\n          style=\"display: block; transform: scale(-1, 1)\"\n        >\n          <path\n            id=\"Path_13\"\n            data-name=\"Path 13\"\n            d=\"M3.431-4.786a.656.656,0,0,0,0-.928l-5.314-5.314a.656.656,0,0,0-.928,0l-.62.62a.656.656,0,0,0,0,.927L.779-5.25-3.432-1.019a.656.656,0,0,0,0,.927l.62.62a.656.656,0,0,0,.928,0Z\"\n            transform=\"translate(3.623 11.22)\"\n            fill=\"#f07904\"\n          />\n        </svg>\n      </router-link>\n      <h2>berichtverzoeken</h2>\n    </header>\n\n    <main>\n      <router-link\n        v-for=\"(item, index) in data\"\n        :key=\"index\"\n        :to=\"'/chat/' + item.userChatUnique._id\"\n      >\n        <article>\n          <div :class=\"item.participant.profileAvatar\">\n            <p>\n              {{ createInitials(item.participant.firstName, item.participant.surName) }}\n            </p>\n          </div>\n\n          <div>\n            <p>{{ item.participant.firstName }} {{ item.participant.surName }}</p>\n            <p v-if=\"item.userChatUnique.messages.length\">\n              {{ item.userChatUnique.messages[item.userChatUnique.messages.length - 1].content }}\n            </p>\n\n            <p v-else class=\"partialState\">Stuur je eerste berichtje!</p>\n\n            <p v-if=\"item.userChatUnique.messages.length\">\n              {{ item.userChatUnique.messages[item.userChatUnique.messages.length - 1].time }}\n            </p>\n\n            <p v-else class=\"partialState\"></p>\n            <div>\n              <p>\n                {{ item.userChatUnique.messages.length }}\n              </p>\n            </div>\n          </div>\n        </article></router-link\n      >\n    </main>\n    <Nav active=\"chats\" />\n  </section>\n</template>\n\n<script>\nimport Nav from \"@/components/nav/nav\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"ChatRequest\",\n  components: {\n    Nav,\n  },\n\n  data() {\n    let chatRequestsData = this.$store.state.chatRequests;\n\n    return {\n      data: chatRequestsData,\n    };\n  },\n  methods: {\n    //  Get the initials of a fullname\n    createInitials(firstName, surName) {\n      let fullName = `${firstName} ${surName}`;\n      // Logic for getting the name initials\n      let rgx = new RegExp(/(\\p{L}{1})\\p{L}+/, \"gu\");\n      let initials = [...fullName.matchAll(rgx)] || [];\n      initials = ((initials.shift()?.[1] || \"\") + (initials.pop()?.[1] || \"\")).toUpperCase();\n      return initials;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/components/chat/chatRequest.scss\";\n</style>\n"]}]}